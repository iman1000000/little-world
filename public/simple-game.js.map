{"version":3,"sources":["../src/simple-game.js"],"names":["DIAGONAL","Math","sqrt","TAU","PI","window","circle","square","GameState","_fps","Phaser","Canvas","setImageRenderingCrisp","game","canvas","scale","pageAlignHorizontally","makeImage","oncontextmenu","e","preventDefault","physics","startSystem","Physics","ARCADE","debug","text","time","fps","val","advancedTiming","Game","width","height","gameState","renderer","CANVAS","antialias","enableDebug","scaleMode","ScaleManager","SHOW_ALL","state","destroy","key","color","img","document","createElement","ctx","getContext","fillStyle","fillRect","load","image","toDataURL","Sprite","x","y","smoothed","add","existing","enable","that","callback","arcade","overlap","undefined","a","b","process","collide","top","dy","bottom","world","left","dx","right","speed","up","input","keyboard","isDown","Keyboard","UP","down","DOWN","LEFT","RIGHT","pad","axisX","axisY","joycon","leftAxisX","leftAxisY","acc","body","acceleration","wb","collideWorldBounds","worldBounce","Point","velocity"],"mappings":"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","file":"simple-game.js","sourcesContent":["const DIAGONAL = Math.sqrt(2) * 0.5;\nconst TAU = Math.PI * 2;\nwindow.circle = 'circle';\nwindow.square = 'square';\n\nclass GameState {\n    constructor() {\n        this._fps = false;\n    }\n    preload() {\n        Phaser.Canvas.setImageRenderingCrisp(this.game.canvas);\n        this.scale.pageAlignHorizontally = true;\n        window.game.makeImage('default', 'white', 32, 32);\n\n        // right click breaks things\n        window.game.canvas.oncontextmenu = function (e) { e.preventDefault(); };\n    }\n\n    create() {\n        // game.input.keyboard.addKeyCapture([Phaser.Keyboard.DOWN, Phaser.Keyboard.UP, Phaser.Keyboard.LEFT, Phaser.Keyboard.RIGHT, Phaser.Keyboard.ENTER, Phaser.Keyboard.SPACE]);\n        game.physics.startSystem(Phaser.Physics.ARCADE);\n    }\n\n    render() {\n        if (this._fps) {\n            game.debug.text(game.time.fps + 'fps', 2, 14);\n        }\n    }\n\n    set fps(val) {\n        window.game.time.advancedTiming = val;\n        this._fps = val;\n    }\n\n    get fps() {\n        return this._fps;\n    }\n}\n\nclass Game extends Phaser.Game {\n    constructor(width, height, gameState, debug = true) {\n        super({\n            width: width,\n            height: height,\n            renderer: Phaser.CANVAS,\n            antialias: false,\n            enableDebug: debug,\n            scaleMode: Phaser.ScaleManager.SHOW_ALL,\n            state: gameState\n        });\n\n        if (window.game) {\n            window.game.destroy();\n        }\n        window.game = this;\n\n    }\n\n    makeImage(key, color, width = 32, height = 32) {\n        let img = document.createElement('canvas');\n        img.width = width;\n        img.height = height;\n        let ctx = img.getContext('2d');\n        ctx.fillStyle = color;\n        ctx.fillRect(0, 0, width, height);\n        this.load.image(key, img.toDataURL());\n    }\n}\n\nclass Sprite extends Phaser.Sprite {\n    constructor(x = 16, y = 16, image = 'default') {\n        super(window.game, x, y, image);\n\n        this.smoothed = false;\n\n        window.game.add.existing(this);\n        window.game.physics.enable(this, Phaser.Physics.ARCADE);\n    }\n\n    overlap(that, callback) {\n        window.game.physics.arcade.overlap(this, that, undefined, (a, b) => {\n            callback(b);\n        }, this);\n    }\n\n    collide(that, process = ()=>{return true;}) {\n        window.game.physics.arcade.collide(this, that, undefined, process);\n    }\n\n    wallClamp() {\n        if (this.top <= 0) {\n            this.top = 0;\n            if (this.dy < 0) {\n                this.dy = 0;\n            }\n        }\n        if (this.bottom >= window.game.world.height) {\n            this.bottom = window.game.world.height;\n            if (this.dy > 0) {\n                this.dy = 0;\n            }\n        }\n        if (this.left < 0) {\n            this.left = 0;\n            if (this.dx < 0) {\n                this.dx = 0;\n            }\n        }\n        if (this.right >= window.game.world.width) {\n            this.right = window.game.world.width;\n            if (this.dx > 0) {\n                this.dx = 0;\n            }\n        }\n    }\n\n    arrowMove(speed) {\n        var up = window.game.input.keyboard.isDown(Phaser.Keyboard.UP);\n        var down = window.game.input.keyboard.isDown(Phaser.Keyboard.DOWN);\n        var left = window.game.input.keyboard.isDown(Phaser.Keyboard.LEFT);\n        var right = window.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT);\n\n        this.dy = 0;\n        this.dx = 0;\n\n        // Cardinal\n        if ( (up && !down && !left && !right) ||\n             (up && !down && left && right) ) {\n            this.dy = -speed;\n         }\n        if ( (!up && down && !left && !right) ||\n             (!up && down && left && right) ) {\n            this.dy = speed;\n         }\n        if ( (!up && !down && left && !right) ||\n             (up && down && left && !right) ) {\n            this.dx = -speed;\n         }\n        if ( (!up && !down && !left && right) ||\n             (up && down && !left && right) ) {\n            this.dx = speed;\n         }\n\n        // Diagonal\n        if (up && !down && !left && right) {\n            this.dy = -speed * DIAGONAL;\n            this.dx = speed * DIAGONAL;\n         }\n        if (up && !down && left && !right) {\n            this.dy = -speed * DIAGONAL;\n            this.dx = -speed * DIAGONAL;\n         }\n        if (!up && down && !left && right) {\n            this.dy = speed * DIAGONAL;\n            this.dx = speed * DIAGONAL;\n         }\n        if (!up && down && left && !right) {\n            this.dy = speed * DIAGONAL;\n            this.dx = -speed * DIAGONAL;\n        }\n    }\n\n    joyconMove(speed, pad) {\n        if (pad) {\n            this.dx = pad.axisX * speed;\n            this.dy = pad.axisY * speed;\n        } else {\n            this.dx = joycon.leftAxisX * speed;\n            this.dy = joycon.leftAxisY * speed;\n        }\n    }\n\n    joyconAcc(acc, pad) {\n        if (pad) {\n            this.body.acceleration.x = pad.axisX * acc;\n            this.body.acceleration.y = pad.axisY * acc;\n        } else {\n            this.body.acceleration.x = joycon.leftAxisX * acc;\n            this.body.acceleration.y = joycon.leftAxisY * acc;\n        }\n    }\n\n    set wallBounce(wb) {\n        if (wb) {\n            this.body.collideWorldBounds = true;\n            this.body.worldBounce = new Phaser.Point(1, 1);\n        } else {\n            this.body.collideWorldBounds = false;\n        }\n    }\n\n    get wallBounce() {\n        return this.body.collideWorldBounds;\n    }\n\n    set dx(val) {\n        this.body.velocity.x = val;\n    }\n\n    get dx() {\n        return this.body.velocity.x;\n    }\n\n    set dy(val) {\n        this.body.velocity.y = val;\n    }\n\n    get dy() {\n        return this.body.velocity.y;\n    }\n\n    set vel(val) {\n        this.dx = val[0];\n        this.dy = val[1];\n    }\n\n    get vel() {\n        return [this.dx, this,dy];\n    }\n\n    set pos(val) {\n        this.x = val[0];\n        this.y = val[1];\n    }\n\n    get pos() {\n        return [this.x, this.y];\n    }\n}\n"]}